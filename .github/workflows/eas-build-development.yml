# ‚úçÔ∏è Description:
# This workflow is used to trigger a build on EAS for the QA environment.
# It will run on every GitHub release published on the repo or can be triggered manually from the actions tab.
# This workflow will use ./actions/eas-build action to trigger the build on EAS with staging env.

# üö® GITHUB SECRETS REQUIRED:
#         - EXPO_TOKEN: Expo token to authenticate with EAS
#         - You can get it from https://expo.dev/settings/access-tokens

name: EAS Development Build (Android & IOS) (EAS)

on:
  push:
    tags:
      - '*'

jobs:
  Build:
    name: EAS Development Build (Android & IOS) (EAS)
    runs-on: ubuntu-latest
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN_XRAY_ANALYZER }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi
      - name: üì¶ Checkout project repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üì¶ Setup Node + PNPM + install deps
        uses: ./.github/actions/setup-node-pnpm-install

      - name: Get version from package.json
        id: get_version
        run: |
          # Use Node.js to extract the version
          VERSION=$(node -p "require('./package.json').version")
          # Set the version as an environment variable for later steps
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Use the SHOULD_SUBMIT secret
        run: |
          echo "The shouldSubmit value from the secret is: ${{ secrets.SHOULD_SUBMIT }}"
          echo "${{ toJSON(secrets) }}"
          echo  "${{ toJSON(env) }}"

      - name: Load environment variables from GitHub Secrets

        run: |
          # Hardcoding APP_ENV
          APP_ENV="development"  # Change to "production" as needed

            echo "Loading environment variables for APP_ENV=${APP_ENV}"

          # Determine the file name based on the APP_ENV
          ENV_FILE=".env.${APP_ENV}"

          # Create or overwrite the .env file
          echo "" > $ENV_FILE





          echo "Environment variables loaded successfully into $ENV_FILE."

      - name: üì¶ Set Up JDK
        uses: ./.github/actions/setup-jdk-generate-apk
        with:
          APP_ENV: development

      - name: ‚è±Ô∏è EAS Build
        uses: ./.github/actions/eas-build
        with:
          APP_ENV: development
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN_XRAY_ANALYZER }}
          VERSION: ${{ env.PACKAGE_VERSION }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          CREDENTIAL_FILE_CONTENT_GOOGLE_KEY: ${{ secrets.CREDENTIAL_FILE_CONTENT_GOOGLE_KEY }}
          IOS: false # TODO: set as true when IOS account is ready

