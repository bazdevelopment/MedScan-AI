# ✍️ Description:
# This workflow is used to create a new version of the app and push a new tag to the repo.
# As this workflow will push code to the repo, we set up GitHub Bot as a Git user.
# This Workflow need to be triggered manually from the Actions tab in the repo.
#         1. Choose your release type (patch, minor, major)
#         2. The workflow will run the np-release script which runs the following steps:
#             - Bump the version in package.json based on the release type using np
#             - Run the prebuild of the app to align the package.json version with the native code
#             - Create a new tag with the new version
#             - Push the new tag to the repo
#

# 🚨 GITHUB SECRETS REQUIRED:
#         - GH_TOKEN: A GitHub token with write repo access.
#           You can generate one from here: https://docs.github.com/en/enterprise-server@3.6/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens
#           make sure to add it to the repo secrets with the name GH_TOKEN

name: New App Version

on:
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        description: 'Release type (one of): major, minor, path'
        default: ' '
        required: false
        options:
          - major
          - minor
          - patch
          - ' '

      new-app-version:
        type: string
        description: "Add a new app version manually if you didn't select release type"
        required: false
        default: ''

      environment:
        type: choice
        description: 'Environment type (one of): development, production'
        required: true
        default: 'development'
        options:
          - development
          - production

      should_submit:
        type: choice
        description: Whether to perform the EAS submit step
        required: true
        default: 'false'
        options:
          - true
          - false

jobs:
  release:
    name: Create New Version and push new tag
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: write
    steps:
      - name: Validate inputs
        id: validate-inputs
        run: |
          if [ -z "${{ github.event.inputs.release-type }}" ] && [ -z "${{ github.event.inputs.new-app-version }}" ]; then
           echo "Error: No release type or version provided. At least one must be specified."
           exit 1
          fi

      - name: 🔍 GH_TOKEN
        if: env.GH_TOKEN == ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        run: echo "GH_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV
      - name: 📦 Checkout project repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: 📝 Git User Setup
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: 📦 Setup Node + PNPM + install deps
        uses: ./.github/actions/setup-node-pnpm-install

      - name: Load environment variables
        run: |
          # Determine the environment and load the appropriate variables
          ENV_FILE=".env.${{ inputs.environment }}"

          # Create or overwrite the .env file
            echo "Loading development environment variables"
            echo "GOOGLE_SERVICES_JSON_ANDROID_BASE64=${{ secrets.GOOGLE_SERVICES_JSON_ANDROID_BASE64 }}" >> $GITHUB_ENV
            echo "GOOGLE_SERVICES_PLIST_IOS_BASE64=${{ secrets.GOOGLE_SERVICES_PLIST_IOS_BASE64 }}" >> $GITHUB_ENV

            echo "GOOGLE_SERVICES_JSON_PATH=${{ vars.GOOGLE_SERVICES_JSON_PATH }}" >> $ENV_FILE
            echo "GOOGLE_SERVICES_PLIST_PATH=${{ vars.GOOGLE_SERVICES_PLIST_PATH }}" >> $ENV_FILE

          echo "Loaded variables successfully."
        shell: bash
      - name: 🏃‍♂️ Run App release
        run: |
          if [ -n "${{ github.event.inputs.release-type }}" ]; then
            echo "Running app-release with app version: ${{ github.event.inputs.release-type }}"
            pnpm app-release ${{ github.event.inputs.release-type }} 
          else
            echo "Running app-release with release type: ${{ github.event.inputs.new-app-version }} only."
            pnpm app-release ${{ github.event.inputs.new-app-version }}
          fi
